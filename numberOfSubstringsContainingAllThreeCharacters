/*
Given a string s consisting only of characters a, b and c.

Return the number of substrings containing at least one occurrence of all these characters a, b and c.
*/

class Solution {
public:
    int numberOfSubstrings(string s) {
        int count[3] = {0, 0, 0}; // Count occurrences of 'a', 'b', and 'c'
        int left = 0, result = 0;

        for (int right = 0; right < s.length(); right++) {
            count[s[right] - 'a']++; // Increase count for current character

            // Move left pointer while all characters are present
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                result += s.length() - right; // All substrings from 'right' to end are valid
                count[s[left] - 'a']--; // Shrink the window
                left++;
            }
        }
        return result;
    }
};
