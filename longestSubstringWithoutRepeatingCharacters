/*
Given a string s, find the length of the longest 
substring
 without duplicate characters.
*/

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> charIndex;
        int maxLength = 0, left = 0;

        for (int right = 0; right < s.size(); right++) {
            if (charIndex.count(s[right])) {
                left = max(left, charIndex[s[right]] + 1); // Move left pointer
            }
            charIndex[s[right]] = right; // Update last seen index
            maxLength = max(maxLength, right - left + 1); // Update max length
        }

        return maxLength;
    }
};
