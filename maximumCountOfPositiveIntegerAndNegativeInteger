/*
Given an array nums sorted in non-decreasing order, return the maximum between the number of positive integers and the number of negative integers.

In other words, if the number of positive integers in nums is pos and the number of negative integers is neg, then return the maximum of pos and neg.
Note that 0 is neither positive nor negative.
*/

class Solution {
public:
    int maximumCount(vector<int>& nums) {
        int n = nums.size();
        
        // Find the first index of a positive number using lower_bound
        int posIdx = lower_bound(nums.begin(), nums.end(), 1) - nums.begin();
        // Find the first index of zero using lower_bound (for negative count)
        int zeroIdx = lower_bound(nums.begin(), nums.end(), 0) - nums.begin();

        int posCount = n - posIdx; // Count of positive numbers
        int negCount = zeroIdx;    // Count of negative numbers

        return max(posCount, negCount);
    }
};
